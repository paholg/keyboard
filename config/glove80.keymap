
#include <behaviors.dtsi>
#include <behaviors/num_word.dtsi> // requires auto-layer module
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/glove80.h"

#define DEF 0
#define SYM 1
#define GAM 2
#define WAS 3

#define XXX &none
#define ___ &trans

/*                               GLOVE80 KEY MATRIX / LAYOUT MAPPING
 ╭────────────────────╮       ╭────────────────────╮ ╭────────────────────╮       ╭────────────────────╮
 │  0   1   2   3   4 ╰───┬───╯  5   6   7   8   9 │ │ LC5 LC4 LC3 LC2 LC1╰───┬───╯ RC1 RC2 RC3 RC4 RC5│
 │ 10  11  12  13  14  15 │ 16  17  18  19  20  21 │ │ LN5 LN4 LN3 LN2 LN1 LN0│ RN0 RN1 RN2 RN3 RN4 RN5│
 │ 22  23  24  25  26  27 │ 28  29  30  31  32  33 │ │ LT5 LT4 LT3 LT2 LT1 LT0│ RT0 RT1 RT2 RT3 RT4 RT5│
 │ 34  35  36  37  38  39 │ 40  41  42  43  44  45 │ │ LM5 LM4 LM3 LM2 LM1 LM0│ RM0 RM1 RM2 RM3 RM4 RM5│
 │ 46  47  48  49  50  51 │ 58  59  60  61  62  63 │ │ LB5 LB4 LB3 LB2 LB1 LB0│ RB0 RB1 RB2 RB3 RB4 RB5│
 │ 64  65  66  67  68 ╭───┴───╮ 75  76  77  78  79 │ │ LF5 LF4 LF3 LF2 LF1╭───┴───╮ RF1 RF2 RF3 RF4 RF5│
 ╰───────────┬────────┴───┬───┴────────┬───────────╯ ╰───────────┬────────┴───┬───┴────────┬───────────╯
             │ 52  53  54 │ 55  56  57 │                         │ LH5 LH4 LH3│ RH3 RH4 RH5│
             │ 69  70  71 │ 72  73  74 │                         │ LH2 LH1 LH0│ RH0 RH1 RH2│
             ╰────────────┴────────────╯                         ╰────────────┴────────────╯
 */

// Lighting stuff
ZMK_MACRO(
  to_def,
  wait-ms = <0>;
  tap-ms = <0>;
  bindings
    = <&macro_tap &rgb_ug RGB_OFF>,
      <&macro_tap &to DEF>;
    
)
ZMK_MACRO(
  to_gam,
  wait-ms = <0>;
  tap-ms = <0>;
  bindings
    = <&macro_tap &rgb_ug RGB_ON>,
      <&macro_tap &rgb_ug RGB_COLOR_HSB(0, 100, 2)>,
      <&macro_tap &to GAM>;
    
)
ZMK_MACRO(
  to_was,
  wait-ms = <0>;
  tap-ms = <0>;
  bindings
    = <&macro_tap &rgb_ug RGB_ON>,
      <&macro_tap &rgb_ug RGB_COLOR_HSB(60, 100, 2)>,
      <&macro_tap &to WAS>;
    
)
// Ensure the lighting starts off
// &rgb_ug RGB_OFF


/* Combos */
#define COMBO_TERM_FAST 18
#define COMBO_TERM_SLOW 30

#define COMBO_IDLE_FAST 150
#define COMBO_IDLE_SLOW 50

#define DEF_COMBO(NAME, BIND, KEY1, KEY2) \
  ZMK_COMBO(NAME, BIND, KEY1 KEY2, DEF, COMBO_TERM_FAST, COMBO_IDLE_FAST)

// DEF_COMBO(lpar, &kp LPAR, LT0, LM0)
// DEF_COMBO(lbkt, &kp LBKT, LM0, LB0)
// DEF_COMBO(lbrc, &kp LBRC, LB1, LF1)

// DEF_COMBO(dash, &kp MINUS, LT1, LM1)
// DEF_COMBO(under, &kp UNDER, LM1, LB1)

// DEF_COMBO(plus, &kp PLUS, RT1, RM1)
// DEF_COMBO(equal, &kp EQUAL, RM1, RB1)

// DEF_COMBO(rpar, &kp RPAR, RT0, RM0)
// DEF_COMBO(rbkt, &kp RBKT, RM0, RB0)
// DEF_COMBO(rbrc, &kp RBRC, RB1, RF1)

// DEF_COMBO(gam_switch, &to GAM, LF4, RF4)

// #define GAM_COMBO(NAME, BIND, KEY1, KEY2) \
//   ZMK_COMBO(NAME, BIND, KEY1 KEY2, GAM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
// GAM_COMBO(gam_switch, &to DEF, LF4, RF4)


/* Homerow mods */

#define KEYS_L LF1 LF2 LF3 LF4 LF5 \
  LB0 LB1 LB2 LB3 LB4 LB5 \
  LM0 LM1 LM2 LM3 LM4 LM5 \
  LT0 LT1 LT2 LT3 LT4 LT5 \
  LN0 LN1 LN2 LN3 LN4 LN5 \
  LC1 LC2 LC3 LC4 LC5
#define KEYS_R RF1 RF2 RF3 RF4 RF5 \
  RB0 RB1 RB2 RB3 RB4 RB5 \
  RM0 RM1 RM2 RM3 RM4 RM5 \
  RT0 RT1 RT2 RT3 RT4 RT5 \
  RN0 RN1 RN2 RN3 RN4 RN5 \
  RC1 RC2 RC3 RC4 RC5
#define THUMBS \
  LH0 LH1 LH2 LH3 LH4 LH5 \
  RH0 RH1 RH2 RH3 RH4 RH5

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_HOLD_TAP(NAME, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <175>; \
        require-prior-idle-ms = <150>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )
MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)
MAKE_HRM(hmol, &mo, &kp, KEYS_R THUMBS)
MAKE_HRM(hmor, &mo, &kp, KEYS_L THUMBS)

// HRM combo hack - workaround for lack of tap-only combos (ZMK issue #544)
// #define ZMK_COMBO_8(NAME, TAP, KEYPOS, LAYERS, COMBO_TERM, COMBO_IDLE, HOLD, SIDE) \
//     MAKE_HRM(hm_combo_ ## NAME, &kp, TAP, SIDE THUMBS) \
//     ZMK_COMBO_6(NAME, &hm_combo_ ## NAME HOLD 0, KEYPOS, LAYERS, COMBO_TERM, COMBO_IDLE)

/* Keymap */


ZMK_LAYER(def,
  &kp F1     &kp F2    &kp F3       &kp F4       &kp F5                                                                                                  &kp F6        &kp F7       &kp F8       &kp F9    &kp F10
  &kp GRAVE  &kp N1    &kp N2       &kp N3       &kp N4        &kp N5                                                                            &kp N6  &kp N7        &kp N8       &kp N9       &kp N0    &kp MINUS
  &kp TAB    &kp Q     &kp W        &kp E        &kp R         &kp T                                                                             &kp Y   &kp U         &kp I        &kp O        &kp P     &kp BSLH
  &kp BSPC   &kp A     &hml LGUI S  &hml LALT D  &hml LCTRL F  &kp G                                                                             &kp H   &hmr RCTRL J  &hmr RALT K  &hmr RGUI L  &kp SEMI  &kp SQT
  &kp PSCRN        &kp Z     &kp X        &kp C        &kp V         &kp B      &kp LSHFT    &kp LCTRL  &kp F11   /**/  &kp F12   &kp RCTRL  &kp RSHFT     &kp N   &kp M         &kp COMMA    &kp DOT      &kp FSLH  &kp DEL
  &kp LGUI   &kp EQUAL       &kp LEFT    &kp RIGHT     &mo SYM                &kp SPACE  &kp ESC    &kp LALT  /**/  &kp RALT  &caps_word  &kp RET             &mo SYM     &kp DOWN     &kp UP     &to_gam    &kp RGUI
)


ZMK_LAYER(sym,
  ___ ___        ___        ___        ___                                                             ___        ___             ___        ___         ___
  ___ ___        ___        ___        ___        ___                                       ___        ___        ___             ___        ___         ___
  ___ ___        ___        &kp MINUS   &kp LPAR  ___                                       ___        &kp RPAR   &kp PLUS        ___        ___         ___
  ___ ___        ___        &kp UNDER   &kp LBKT  ___                                       ___        &kp RBKT   &kp EQUAL       ___        ___         ___
  ___ ___        ___        ___         &kp LBRC  ___        ___ ___ ___  /**/  ___ ___ ___ ___        &kp RBRC   ___             ___        ___         ___
  ___ ___        ___        ___        ___                   ___ ___ ___  /**/  ___ ___ ___            ___        ___             ___        ___         ___  
)

ZMK_LAYER(gam,
  &kp F1     &kp F2    &kp F3       &kp F4       &kp F5                                                                                                  &kp F6        &kp F7       &kp F8       &kp F9    &rgb_ug RGB_EFF
  &kp GRAVE  &kp N1    &kp N2       &kp N3       &kp N4        &kp N5                                                                            &kp N6  &kp N7        &kp N8       &kp N9       &kp N0    &kp MINUS
  &kp TAB    &kp Q     &kp W        &kp E        &kp R         &kp T                                                                             &kp Y   &kp U         &kp I        &kp O        &kp P     &kp BSLH
  &kp BSPC   &kp A     &kp S        &kp  D       &kp F         &kp G                                                                             &kp H   &kp J         &kp K        &kp L  &kp SEMI  &kp SQT
  &kp PSCRN        &kp Z     &kp X        &kp C        &kp V         &kp B      &kp LSHFT    &kp LCTRL  &kp F11   /**/  &to_was   &kp RCTRL  &kp RSHFT     &kp N   &kp M         &kp COMMA    &kp DOT      &kp FSLH  &kp DEL
  &kp LGUI   &kp EQUAL       &kp LEFT    &kp RIGHT     &kp LCTRL                &kp SPACE  &kp ESC    &kp LALT  /**/  &to_def  &caps_word  &kp RET             &kp RCTRL     &kp DOWN     &kp UP     ___    &kp RGUI
)

ZMK_LAYER(was,
  &kp F1     &kp F2    &kp F3       &kp F4       &kp F5                                                                                                  &kp F6        &kp F7       &kp F8       &kp F9    &rgb_ug RGB_EFF
  &kp GRAVE  &kp N1    &kp N2       &kp N3       &kp N4        &kp N5                                                                            &kp N6  &kp N7        &kp N8       &kp N9       &kp N0    &kp MINUS
  &kp TAB    &kp Q     &kp W        &kp W        &kp E         &kp R                                                                             &kp Y   &kp U         &kp I        &kp O        &kp P     &kp BSLH
  &kp BSPC   &kp LSHFT     &kp A        &kp  S       &kp D         &kp F                                                                             &kp H   &kp J         &kp K        &kp L  &kp SEMI  &kp SQT
  &kp PSCRN        &kp Z     &kp X        &kp C        &kp V         &kp B      &kp LSHFT    &kp LCTRL  &kp F11   /**/  &kp F12   &kp RCTRL  &kp RSHFT     &kp N   &kp M         &kp COMMA    &kp DOT      &kp FSLH  &kp DEL
  &kp LGUI   &kp EQUAL       &kp LEFT    &kp RIGHT     &kp LCTRL                &kp SPACE  &kp ESC    &kp LALT  /**/  &to_def  &caps_word  &kp RET             &kp RCTRL     &kp DOWN     &kp UP     ___    &kp RGUI
)
